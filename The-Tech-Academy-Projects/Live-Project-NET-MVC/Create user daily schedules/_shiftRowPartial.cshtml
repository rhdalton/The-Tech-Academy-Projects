@model ScheduleUsers.Models.ScheduledWorkPeriod

@{
    var shiftcount = Convert.ToInt32(ViewData["shiftcount"]);
    var dayofweek = Convert.ToInt32(ViewData["dayofweek"]);
    var shifttemplates = ViewData["shifttemplates"] as List<ScheduleUsers.Models.ScheduleShiftTemplate>;
}

<tr id="shift-@shiftcount" class="shift-row shift-row-item">
    <td class="dow">
        @if (shiftcount == 0)
        {
            <select id="dayofweek" name="dayofweek" class="form-control">
                @for (int j = 0; j < 7; j++)
                {
                    var dow = (ScheduleUsers.Models.ScheduledWorkPeriod.Day)j;
                    <option value="@j">@dow</option>
                }
            </select>
        }
        else
        {
            var dowtext = (ScheduleUsers.Models.ScheduledWorkPeriod.Day)dayofweek;
            @dowtext;
        }
    </td>
    <td>
        <select id="shift-template-@shiftcount" name="shifttemplate" class="form-control shift-template">
            @foreach (var st in shifttemplates)
            {
                @* If shift Id is (id 1), then display blank*@
                if (st.Id == "1")
                {
                    <option value="@st.Id">-</option>
                }
                @* Else show shift template row*@
                else
                {
                    var st_start = st.StartTime.Value.ToString("h:mm tt");
                    var st_end = st.EndTime.Value.ToString("h:mm tt");
                    <option value="@st_start|@st_end">@st_start - @st_end</option>
                }
            }
        </select>

    </td>
    <td><input type="checkbox" class="shift-dayoff" id="IsDayOff-@shiftcount" name="IsDayOff" value="1" @if (Model.IsDayOff) { <text> checked</text> } /></td>
    <td>
        @Html.TextBoxFor(m => m.StartTime, "{0:h:mm tt}", new { Name = "StartTime", @class = "form-control", id = "StartTime-" + shiftcount })
        @Html.ValidationMessageFor(m => m.StartTime, "", new { @class = "text-danger" })
    </td>
    <td>
        @Html.TextBoxFor(m => m.EndTime, "{0:h:mm tt}", new { Name = "EndTime", @class = "form-control", id = "EndTime-" + shiftcount })
        @Html.ValidationMessageFor(m => m.EndTime, "", new { @class = "text-danger" })
    </td>
</tr>
